# 'docker-compose up' will run this.
version: '3'  # requires Docker Compose 1.13 or later

# This section describes the various containers (services).
services:
  
  rabbitmq:
    # There is a prebuilt RabbitMQ image; see
    # https://hub.docker.com/_/rabbitmq/ for details.
    # This variant is built on Alpine Linux (it's smaller) and includes
    # the management UI.
    # https://www.rabbitmq.com/management.html
    image: 'rabbitmq:3-management-alpine'
    container_name: herumbra-rabbitmq

    # These ports are exposed on the host; 'hostport:containerport'.
    # You could connect to this server from outside with the *host's*
    # DNS name or IP address and port 5672 (the left-hand side of the
    # colon).
    ports:
      # The standard AMQP protocol port
      - '5672:5672'
      # HTTP management UI
      - '15672:15672'

    # Run this container on a private network for this application.
    # This is necessary for magic Docker DNS to work: other containers
    # also running on this network will see a host name "rabbitmq"
    # (the name of this section) and the internal port 5672, even though
    # that's not explicitly published above.
    networks:
      - network

  umbra:
    # If needed, Docker Compose will automatically run consumer/Dockerfile.
    build:
      context: ./umbra
      dockerfile: Dockerfile
    container_name: herumbra-umbra

    links:
    - rabbitmq
    depends_on:
    - rabbitmq

    # Environment variables:
    #environment:
      # The location of the RabbitMQ server.  "amqp" is the protocol;
      # "rabbitmq" is the hostname.  Note that there is not a guarantee
      # that the server will start first!  Telling the pika client library
      # to try multiple times gets around this ordering issue.
      #AMQP_URL: 'amqp://rabbitmq?connection_attempts=5&retry_delay=5'

    # Again, run on the private network.  Needed to see the "rabbitmq"
    # magic Docker DNS name.
    networks:
      - network

  heritrix:
    build:
      context: ./heritrix
      dockerfile: Dockerfile
    container_name: herumbra-heritrix

    links:
    - rabbitmq
   
    depends_on:
    - rabbitmq
    
    ports:
      # HTTP management
      - '15673:8443'
      # JMX
      - '15675:5000'

    volumes:
     - ${HERITRIX_JOBS_PATH}:/opt/heritrix/jobs
     - ${HERITRIX_OUTPUT}:/opt/heritrix/output

    networks:
     - network

  filebrowser:
    image: filebrowser/filebrowser:latest
    container_name: herumbra-filebrowser
    
    ports:
      - '15678:80' 
    
    volumes:
      - ${DATA_DIR}:/srv
    
    networks:
      - network

networks:
  # Declare our private network.  We must declare one for the magic
  # Docker DNS to work, but otherwise its default settings are fine.
  network: {}

